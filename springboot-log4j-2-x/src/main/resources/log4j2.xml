<?xml version="1.0" encoding="utf-8"?>

<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE >ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出；可以设置成OFF(关闭)或Error(只输出错误信息)-->
<!--monitorInterval：Log4j2能够自动检测修改配置文件和重新配置本身，设置间隔秒数-->
<configuration status="WARN" monitorInterval="30">
    <properties>
        <!--
        缺省配置（用于开发环境），配置日志文件输出目录和动态参数。其他环境需要在VM参数中指定；
        “sys:”表示：如果VM参数中没指定这个变量值，则使用本文件中定义的缺省全局变量值
        -->
        <property name="instance">spring-boot-log</property>
        <!-- 文件输出格式 -->
        <property name="PATTERN">%d{yyyy-MM-dd HH:mm:ss.SSS} |-%-5level [%thread] %c [%L] -| %msg%n</property>
        <!-- 文件输出目录 -->
        <property name="log.dir">./logs</property>

    </properties>

    <!--日志输出-->
    <appenders>
        <!--输出控制台的配置-->
        <Console name="CONSOLE" target="system_out">
            <PatternLayout pattern="${PATTERN}" />
        </Console>
        <!-- info及以上级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingRandomAccessFile name="infoLog" fileName="${log.dir}/${instance}-info.log"
            filePattern="${log.dir}/%d{yyyy-MM}/${instance}-info-%d{yyyy-MM-dd}-%i.log.gz"
            append="true">
            <PatternLayout pattern="[%date{yyyy-MM-ddHH:mm:ss.SSS}][%thread][%level][%class][%line]:%message%n" />
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <Filters>
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="NEUTRAL"/>
            </Filters>
            <Policies>
                <!-- 基于时间的滚动策略，interval属性用来指定多久滚动一次，默认是1 hour -->
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
                <!-- 基于指定文件大小的滚动策略，size属性用来定义每个日志文件的大小 -->
                <SizeBasedTriggeringPolicy size="1MB" />
                <!-- DefaultRolloverStrategy:用来指定同一个文件夹下最多有几个日志文件时开始删除最旧的，创建新的(通过max属性) -->
            </Policies>
        </RollingRandomAccessFile>

        <!-- warn级别的日志信息 -->
        <RollingRandomAccessFile name="warnLog"
            fileName="${log.dir}/${instance}-warn.log"
            filePattern="${log.dir}/%d{yyyy-MM}/${instance}-warn-%d{yyyy-MM-dd}-%i.log.gz"
            append="true">
            <Filters>
                <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY" />
            </Filters>
            <PatternLayout pattern="[%date{yyyy-MM-ddHH:mm:ss.SSS}][%thread][%level][%class][%line]:%message%n" />
            <Policies>
                <timeBasedTriggeringPolicy interval="1" modulate="true" />
                <sizeBasedTriggeringPolicy size="1MB" />
            </Policies>
        </RollingRandomAccessFile>

        <!-- error级别的日志信息 -->
        <RollingRandomAccessFile name="errorLog"
                fileName="${log.dir}/${instance}-error.log"
                filePattern="${log.dir}/%d{yyyy-MM}/${instance}-error-%d{yyyy-MM-dd}-%i.log.gz"
                append="true">
            <filters>
                <ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY" />
            </filters>
            <PatternLayout pattern="[%date{yyyy-MM-ddHH:mm:ss.SSS}][%thread][%level][%class][%line]:%message%n" />
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
                <SizeBasedTriggeringPolicy size="1MB" />
            </Policies>
        </RollingRandomAccessFile>
    </appenders>

    <!-- 全局配置，默认所有的Logger都继承此配置 -->
    <!-- 用来配置LoggerConfig，包含一个root logger和若干个普通logger。
    additivity指定是否同时输出log到父类的appender，缺省为true。
    一个Logger可以绑定多个不同的Appender。只有定义了logger并引入的appender，appender才会生效。 -->

    <!--日志名称-->
    <loggers>
        <logger name="com.master" level="debug" /><!-- 默认 additivity="true"  向root传递  -->
        <!--过滤掉spring和hibernate的一些无用的debug信息-->
        <logger name="org.springframework" level="info" additivity="true"/>
        <root level="info">
            <appender-ref ref="infoLog" />
            <appender-ref ref="CONSOLE" />
            <appender-ref ref="errorLog" />
        </root>
    </loggers>
</configuration>